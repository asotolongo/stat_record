stat_record  extension
======================================

This PostgreSQL extension can be useful for the DBA to analyze server behavior over time. Because PostgreSQL stores current statistics, this extension is implemented to record statistics on the database server at any time and can be consulted when required, and also display several reports on statistics such as: connection, size, cache, usage of table and index. , queries, bloat, etc. and you can compare some statistics over time to see the changes and evolution.
#required PG10+,  pg_stat_statements extensions


IMPORTANT: There're bugs in the existing version, please contact to me.


Building and install
--------
Run: make install 
--if not install,  you must make sure you can see the binary pg_config,
maybe setting postgresql binary path in the SO  or setting PG_CONFIG = /path_to_pg_config/  in the makefile  or make install /path_to_pg_config/

In postgresql execute: 
CREATE EXTENSION stat_record CASCADE;

or 

CREATE SCHEMA stat_record; 
CREATE EXTENSION stat_record CASCADE schema stat_record ;

--It create schema stat_record and tables/functions

--Tables
_stat_record._record_number ----table where store information about the record taked

--Functions:
select _stat_record.take_record()  ---- take stats record 
select _stat_record.truncate_record( boolean) ---- truncate all record taked (boolean = true, reset id_record to 1)
select _stat_record.delete_record(bigint) ---- delete a record with id_record parameter
select * from _stat_record.detail_record (bigint) ----get report with all global, database , objects and  querys stats about one specific record
select * from _stat_record.lastest_records(bigint) ---- get the lastes record (if a number (N) is specified, it shows the last N records)
select * from _stat_record.global_report_record(bigint,bigint) ----get report with global stats about id_record specified
select * from _stat_record.total_report_record(bigint,bigint) ----get report with all global, database, objects and  querys stats about id_records specified
select * from _stat_record.total_report_for_2last_record() -----get report with all global, database , objects and  querys stats about two last record taked
select * from _stat_record.total_report_for_amonth_record(date) -----get report with all global,  database , objecst and  querys stats about first and the last record taked a moth specified
select _stat_record.export_total_report_record(bigint,bigint,text) ----export CSV report with all global,  database , objects and  querys stats about first and the last record taked a moth specified y some path(by default /tmp/global_report.csv)



--Example of use:

select _stat_record.take_record()--taken a record
stat_record=# select _stat_record.take_record();
NOTICE:  record taked
 take_record 
-------------
 t
(1 fila)

--wait a time and take the record again 
select _stat_record.take_record();
NOTICE:  record taked
 take_record 
-------------
 t
(1 fila)


--wait a time and take the record again 
select _stat_record.take_record();
NOTICE:  record taked
 take_record 
-------------
 t
(1 fila)


--getting the last tree records
dell_testing=# select * from _stat_record.lastest_records(3);
 id |        record_time         | record_description 
----+----------------------------+--------------------
  3 | 2019-07-02 15:32:43.160909 | 
  2 | 2019-07-02 15:31:41.829337 | 
  1 | 2019-07-02 15:29:30.187795 | 
(3 filas)







--get global report about 1 and 2 records
stat_record=# select * from _stat_record.global_report_record(1,2);
Global report from database server, generate by stat_record extension 
 Record id 1, taked: 2019-07-02 15:29:30.187795 :->
   Version server: PostgreSQL 10.9 (Ubuntu 10.9-1.pgdg16.04+1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609, 64-bit
   Server start: 2019-07-01 09:14:33.591829-04
   Server reload: 2019-07-01 09:14:32.702734-04
   Users:14
   Databases: 28
   Tablespaces: 2
   Tablespaces Names/size: 
     pg_default: 11199.00 MB
     pg_global: 0.00 MB
   Partitions Disc:->
     S.ficheros  Tamaño  Usados  Disp    Uso%    Montado
     udev        7.8G    0       7.8G    0%      /dev
     tmpfs       1.6G    11M     1.6G    1%      /run
     /dev/sda2   202G    69G     123G    36%     /
     tmpfs       7.8G    163M    7.7G    3%      /dev/shm
     tmpfs       5.0M    4.0K    5.0M    1%      /run/lock
     tmpfs       7.8G    0       7.8G    0%      /sys/fs/cgroup
     /dev/sda1   380M    1.2M    379M    1%      /boot/efi
     /dev/sda3   230G    188G    31G     87%     /home
     tmpfs       1.6G    84K     1.6G    1%      /run/user/1000
 Record id 2, taked: 2019-07-02 15:31:41.829337 :->
   Version server: PostgreSQL 10.9 (Ubuntu 10.9-1.pgdg16.04+1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609, 64-bit
   Server start: 2019-07-01 09:14:33.591829-04
   Server reload: 2019-07-01 09:14:32.702734-04
   Users: 14
   Databases: 28
   Tablespaces: 2
   Tablespaces Names/size: 
     pg_default: 11209.00 MB
     pg_global: 0.00 MB
   Partitions Disc:->
     S.ficheros  Tamaño  Usados  Disp    Uso%    Montado
     udev        7.8G    0       7.8G    0%      /dev
     tmpfs       1.6G    11M     1.6G    1%      /run
     /dev/sda2   202G    69G     123G    36%     /
     tmpfs       7.8G    163M    7.7G    3%      /dev/shm
     tmpfs       5.0M    4.0K    5.0M    1%      /run/lock
     tmpfs       7.8G    0       7.8G    0%      /sys/fs/cgroup
     /dev/sda1   380M    1.2M    379M    1%      /boot/efi
     /dev/sda3   230G    188G    31G     87%     /home
     tmpfs       1.6G    84K     1.6G    1%      /run/user/1000
 Configuration Differences:->
 Databases Differences:->
     Databases count: 0 
     Databases sizes: 9.76 MB
     Databases chache ratio: 0.06 %
     Databases connections: -1 
     Databases active connections: 0 
     Databases tuples tempfiles: 0 
     Databases tuples deleted: 0 
     Databases tuples updated: 1 
     Databases tuples inserted: 34143 
     Databases tuples fetched: 19409 
     Databases tuples returned: 956439 
     Databases rollback: 0 
     Databases commit: 445 
(58 filas)


--get the total reports about 1 and 3 records and some different
stat_record=#select * from _stat_record.total_report_record(1,3);

--get the total reports about 1 and 3 records and some different and export to some file csv
stat_record=#select _stat_record.export_total_report_record(1,3,'/tmp/reporte.csv')

--get the total reports about last tow records taked and some different
stat_record=#select * from select * from _stat_record.total_report_for_2last_record()


--get the total reports about fisrt and the last records taked in the month 
stat_record=#select * from _stat_record.total_report_for_amonth_record('2019-03-01') --get report in march 2019


--delete some record by id
stat_record=# select _stat_record.delete_record(1);
NOTICE:  record deleted
 delete_record 
---------------
 t
(1 fila)

dell_testing=# select * from _stat_record.lastest_records(3);
 id |        record_time         | record_description 
----+----------------------------+--------------------
  3 | 2019-07-02 15:32:43.160909 | 
  2 | 2019-07-02 15:31:41.829337 | 
(2 filas)




--delete all records and restart the id from 1, if parameters if false do nor restart de id from 1
select _stat_record.truncate_record( true);
NOTICE:  truncando además la tabla «_global_stat»
NOTICE:  truncando además la tabla «_db_stat»
NOTICE:  truncando además la tabla «_global_object»
NOTICE:  truncando además la tabla «_query_stat»
NOTICE:  truncando además la tabla «_so_partitions»
 truncate_record 
-----------------
 t
(1 fila)





Anthony R. Sotolongo leon
asotolongo@gmail.com

